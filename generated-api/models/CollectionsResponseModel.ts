/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CollectionContentSummaryResponseModel } from './CollectionContentSummaryResponseModel';
import {
    CollectionContentSummaryResponseModelFromJSON,
    CollectionContentSummaryResponseModelFromJSONTyped,
    CollectionContentSummaryResponseModelToJSON,
} from './CollectionContentSummaryResponseModel';
import type { UserGroupResponseModel } from './UserGroupResponseModel';
import {
    UserGroupResponseModelFromJSON,
    UserGroupResponseModelFromJSONTyped,
    UserGroupResponseModelToJSON,
} from './UserGroupResponseModel';
import type { TagSummaryResponseModel } from './TagSummaryResponseModel';
import {
    TagSummaryResponseModelFromJSON,
    TagSummaryResponseModelFromJSONTyped,
    TagSummaryResponseModelToJSON,
} from './TagSummaryResponseModel';
import type { UserSummaryResponseModel } from './UserSummaryResponseModel';
import {
    UserSummaryResponseModelFromJSON,
    UserSummaryResponseModelFromJSONTyped,
    UserSummaryResponseModelToJSON,
} from './UserSummaryResponseModel';

/**
 * 
 * @export
 * @interface CollectionsResponseModel
 */
export interface CollectionsResponseModel {
    /**
     * Content. The content items (questions and/or articles) contained in this collection.
     * @type {Array<CollectionContentSummaryResponseModel>}
     * @memberof CollectionsResponseModel
     */
    content?: Array<CollectionContentSummaryResponseModel>;
    /**
     * Editor users. Users who can edit this collection.
     * @type {Array<UserSummaryResponseModel>}
     * @memberof CollectionsResponseModel
     */
    editorUsers?: Array<UserSummaryResponseModel>;
    /**
     * Editor user groups. User groups whose members can modify this collection.
     * @type {Array<UserGroupResponseModel>}
     * @memberof CollectionsResponseModel
     */
    editorUserGroups?: Array<UserGroupResponseModel>;
    /**
     * ID. The Collection's unique identifier.
     * @type {number}
     * @memberof CollectionsResponseModel
     */
    id?: number;
    /**
     * Title. A brief title to distinguish the Collection and its contents.
     * @type {string}
     * @memberof CollectionsResponseModel
     */
    title?: string;
    /**
     * Description. A detailed description of what the Collection contains. Supports Markdown.
     * @type {string}
     * @memberof CollectionsResponseModel
     */
    description?: string;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof CollectionsResponseModel
     */
    owner?: UserSummaryResponseModel;
    /**
     * Creation date. The date and time the collection was created.
     * @type {Date}
     * @memberof CollectionsResponseModel
     */
    creationDate?: Date;
    /**
     * Is deleted. Returns true if the collection was deleted.
     * @type {boolean}
     * @memberof CollectionsResponseModel
     */
    isDeleted?: boolean;
    /**
     * Tags. Tags associated with the content items in the collection.
     * @type {Array<TagSummaryResponseModel>}
     * @memberof CollectionsResponseModel
     */
    tags?: Array<TagSummaryResponseModel>;
}

/**
 * Check if a given object implements the CollectionsResponseModel interface.
 */
export function instanceOfCollectionsResponseModel(value: object): value is CollectionsResponseModel {
    return true;
}

export function CollectionsResponseModelFromJSON(json: any): CollectionsResponseModel {
    return CollectionsResponseModelFromJSONTyped(json, false);
}

export function CollectionsResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionsResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(CollectionContentSummaryResponseModelFromJSON)),
        'editorUsers': json['editorUsers'] == null ? undefined : ((json['editorUsers'] as Array<any>).map(UserSummaryResponseModelFromJSON)),
        'editorUserGroups': json['editorUserGroups'] == null ? undefined : ((json['editorUserGroups'] as Array<any>).map(UserGroupResponseModelFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'owner': json['owner'] == null ? undefined : UserSummaryResponseModelFromJSON(json['owner']),
        'creationDate': json['creationDate'] == null ? undefined : (new Date(json['creationDate'])),
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagSummaryResponseModelFromJSON)),
    };
}

export function CollectionsResponseModelToJSON(value?: CollectionsResponseModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(CollectionContentSummaryResponseModelToJSON)),
        'editorUsers': value['editorUsers'] == null ? undefined : ((value['editorUsers'] as Array<any>).map(UserSummaryResponseModelToJSON)),
        'editorUserGroups': value['editorUserGroups'] == null ? undefined : ((value['editorUserGroups'] as Array<any>).map(UserGroupResponseModelToJSON)),
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'owner': UserSummaryResponseModelToJSON(value['owner']),
        'creationDate': value['creationDate'] == null ? undefined : ((value['creationDate']).toISOString()),
        'isDeleted': value['isDeleted'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagSummaryResponseModelToJSON)),
    };
}

