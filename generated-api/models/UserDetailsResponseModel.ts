/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommunitySummaryResponseModel } from './CommunitySummaryResponseModel';
import {
    CommunitySummaryResponseModelFromJSON,
    CommunitySummaryResponseModelFromJSONTyped,
    CommunitySummaryResponseModelToJSON,
} from './CommunitySummaryResponseModel';

/**
 * 
 * @export
 * @interface UserDetailsResponseModel
 */
export interface UserDetailsResponseModel {
    /**
     * Communities. Communities the user is a member of.
     * @type {Array<CommunitySummaryResponseModel>}
     * @memberof UserDetailsResponseModel
     */
    communities?: Array<CommunitySummaryResponseModel>;
    /**
     * External ID. The unique external ID for the user that can be set via SCIM or SAML.
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    externalId?: string | null;
    /**
     * Department. The user's organizational department that can be set via SAML.
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    department?: string | null;
    /**
     * Job Title. The user's organizational job title that can be set via SAML.
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    jobTitle?: string | null;
    /**
     * Email address. Only visible to admins, or for the current user.
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    email?: string | null;
    /**
     * ID. The user's unique identifier on this site.
     * @type {number}
     * @memberof UserDetailsResponseModel
     */
    id?: number;
    /**
     * Account ID. The user's unique account identifier across all Stack Overflow sites.
     * @type {number}
     * @memberof UserDetailsResponseModel
     */
    accountId?: number | null;
    /**
     * Name. The user's name.
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    name?: string;
    /**
     * Avatar URL. The URL to the user's avatar (profile picture).
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    avatarUrl?: string;
    /**
     * Reputation. The user's numerical reputation.
     * @type {number}
     * @memberof UserDetailsResponseModel
     */
    reputation?: number;
    /**
     * Role. The user's role on the site.
     * @type {string}
     * @memberof UserDetailsResponseModel
     */
    role?: string;
}

/**
 * Check if a given object implements the UserDetailsResponseModel interface.
 */
export function instanceOfUserDetailsResponseModel(value: object): value is UserDetailsResponseModel {
    return true;
}

export function UserDetailsResponseModelFromJSON(json: any): UserDetailsResponseModel {
    return UserDetailsResponseModelFromJSONTyped(json, false);
}

export function UserDetailsResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetailsResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'communities': json['communities'] == null ? undefined : ((json['communities'] as Array<any>).map(CommunitySummaryResponseModelFromJSON)),
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'department': json['department'] == null ? undefined : json['department'],
        'jobTitle': json['jobTitle'] == null ? undefined : json['jobTitle'],
        'email': json['email'] == null ? undefined : json['email'],
        'id': json['id'] == null ? undefined : json['id'],
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'name': json['name'] == null ? undefined : json['name'],
        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],
        'reputation': json['reputation'] == null ? undefined : json['reputation'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function UserDetailsResponseModelToJSON(value?: UserDetailsResponseModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'communities': value['communities'] == null ? undefined : ((value['communities'] as Array<any>).map(CommunitySummaryResponseModelToJSON)),
        'externalId': value['externalId'],
        'department': value['department'],
        'jobTitle': value['jobTitle'],
        'email': value['email'],
        'id': value['id'],
        'accountId': value['accountId'],
        'name': value['name'],
        'avatarUrl': value['avatarUrl'],
        'reputation': value['reputation'],
        'role': value['role'],
    };
}

