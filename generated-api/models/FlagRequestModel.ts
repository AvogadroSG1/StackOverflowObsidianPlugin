/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FlagRequestModel
 */
export interface FlagRequestModel {
    /**
     * Flag option ID. This value will be provided when requesting list of available flags.
     * @type {number}
     * @memberof FlagRequestModel
     */
    optionId: number;
    /**
     * User's comment. Only include this field if the flag option requires it.
     * @type {string}
     * @memberof FlagRequestModel
     */
    comment?: string | null;
    /**
     * ID of a related question. Only include this field if the flag option requires it.
     * @type {number}
     * @memberof FlagRequestModel
     */
    relatedQuestionId?: number | null;
    /**
     * Name of the network site where question should be migrated. Only include this field if the flag option requires it.
     * @type {string}
     * @memberof FlagRequestModel
     */
    targetSite?: string | null;
}

/**
 * Check if a given object implements the FlagRequestModel interface.
 */
export function instanceOfFlagRequestModel(value: object): value is FlagRequestModel {
    if (!('optionId' in value) || (value as any)['optionId'] === undefined) return false;
    return true;
}

export function FlagRequestModelFromJSON(json: any): FlagRequestModel {
    return FlagRequestModelFromJSONTyped(json, false);
}

export function FlagRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlagRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'optionId': json['optionId'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'relatedQuestionId': json['relatedQuestionId'] == null ? undefined : json['relatedQuestionId'],
        'targetSite': json['targetSite'] == null ? undefined : json['targetSite'],
    };
}

export function FlagRequestModelToJSON(value?: FlagRequestModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'optionId': value['optionId'],
        'comment': value['comment'],
        'relatedQuestionId': value['relatedQuestionId'],
        'targetSite': value['targetSite'],
    };
}

