/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TagSummaryResponseModel } from './TagSummaryResponseModel';
import {
    TagSummaryResponseModelFromJSON,
    TagSummaryResponseModelFromJSONTyped,
    TagSummaryResponseModelToJSON,
} from './TagSummaryResponseModel';
import type { UserSummaryResponseModel } from './UserSummaryResponseModel';
import {
    UserSummaryResponseModelFromJSON,
    UserSummaryResponseModelFromJSONTyped,
    UserSummaryResponseModelToJSON,
} from './UserSummaryResponseModel';
import type { ArticleType } from './ArticleType';
import {
    ArticleTypeFromJSON,
    ArticleTypeFromJSONTyped,
    ArticleTypeToJSON,
} from './ArticleType';

/**
 * 
 * @export
 * @interface ArticleSummaryResponseModel
 */
export interface ArticleSummaryResponseModel {
    /**
     * ID. The article's unique identifier.
     * @type {number}
     * @memberof ArticleSummaryResponseModel
     */
    id?: number;
    /**
     * 
     * @type {ArticleType}
     * @memberof ArticleSummaryResponseModel
     */
    type?: ArticleType;
    /**
     * Title. The actual article, stated briefly in one sentence.
     * @type {string}
     * @memberof ArticleSummaryResponseModel
     */
    title?: string;
    /**
     * Body. Additional details to clarify the article.
     * @type {string}
     * @memberof ArticleSummaryResponseModel
     */
    body?: string;
    /**
     * Tags. Tags associated with the article.
     * @type {Array<TagSummaryResponseModel>}
     * @memberof ArticleSummaryResponseModel
     */
    tags?: Array<TagSummaryResponseModel>;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof ArticleSummaryResponseModel
     */
    owner?: UserSummaryResponseModel;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof ArticleSummaryResponseModel
     */
    lastEditor?: UserSummaryResponseModel;
    /**
     * Creation date. The date and time the article was created.
     * @type {Date}
     * @memberof ArticleSummaryResponseModel
     */
    creationDate?: Date;
    /**
     * Last activity date. The date and time the article or one of its answers last had significant activity. This includes (but is not limited to) an edit, rollback, change to tags, new answer, bounty added, bump.
     * @type {Date}
     * @memberof ArticleSummaryResponseModel
     */
    lastActivityDate?: Date | null;
    /**
     * Score. Calculated by subtracting the number of downvotes from the number of upvotes
     * @type {number}
     * @memberof ArticleSummaryResponseModel
     */
    score?: number;
    /**
     * View count. The number of times users have viewed this article.
     * @type {number}
     * @memberof ArticleSummaryResponseModel
     */
    viewCount?: number;
    /**
     * Share URL. The article's direct URL.
     * @type {string}
     * @memberof ArticleSummaryResponseModel
     */
    shareUrl?: string;
    /**
     * Is deleted. Returns true if the article was deleted.
     * @type {boolean}
     * @memberof ArticleSummaryResponseModel
     */
    isDeleted?: boolean;
    /**
     * Is obsolete. Returns true if the article was marked by a moderator as obsolete.
     * @type {boolean}
     * @memberof ArticleSummaryResponseModel
     */
    isObsolete?: boolean;
    /**
     * Is closed. Returns true if the article was closed by a moderator.
     * @type {boolean}
     * @memberof ArticleSummaryResponseModel
     */
    isClosed?: boolean;
}



/**
 * Check if a given object implements the ArticleSummaryResponseModel interface.
 */
export function instanceOfArticleSummaryResponseModel(value: object): value is ArticleSummaryResponseModel {
    return true;
}

export function ArticleSummaryResponseModelFromJSON(json: any): ArticleSummaryResponseModel {
    return ArticleSummaryResponseModelFromJSONTyped(json, false);
}

export function ArticleSummaryResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleSummaryResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : ArticleTypeFromJSON(json['type']),
        'title': json['title'] == null ? undefined : json['title'],
        'body': json['body'] == null ? undefined : json['body'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagSummaryResponseModelFromJSON)),
        'owner': json['owner'] == null ? undefined : UserSummaryResponseModelFromJSON(json['owner']),
        'lastEditor': json['lastEditor'] == null ? undefined : UserSummaryResponseModelFromJSON(json['lastEditor']),
        'creationDate': json['creationDate'] == null ? undefined : (new Date(json['creationDate'])),
        'lastActivityDate': json['lastActivityDate'] == null ? undefined : (new Date(json['lastActivityDate'])),
        'score': json['score'] == null ? undefined : json['score'],
        'viewCount': json['viewCount'] == null ? undefined : json['viewCount'],
        'shareUrl': json['shareUrl'] == null ? undefined : json['shareUrl'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'isObsolete': json['isObsolete'] == null ? undefined : json['isObsolete'],
        'isClosed': json['isClosed'] == null ? undefined : json['isClosed'],
    };
}

export function ArticleSummaryResponseModelToJSON(value?: ArticleSummaryResponseModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': ArticleTypeToJSON(value['type']),
        'title': value['title'],
        'body': value['body'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagSummaryResponseModelToJSON)),
        'owner': UserSummaryResponseModelToJSON(value['owner']),
        'lastEditor': UserSummaryResponseModelToJSON(value['lastEditor']),
        'creationDate': value['creationDate'] == null ? undefined : ((value['creationDate']).toISOString()),
        'lastActivityDate': value['lastActivityDate'] == null ? undefined : ((value['lastActivityDate'] as any).toISOString()),
        'score': value['score'],
        'viewCount': value['viewCount'],
        'shareUrl': value['shareUrl'],
        'isDeleted': value['isDeleted'],
        'isObsolete': value['isObsolete'],
        'isClosed': value['isClosed'],
    };
}

