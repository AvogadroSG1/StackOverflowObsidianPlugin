/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSummaryResponseModel } from './UserSummaryResponseModel';
import {
    UserSummaryResponseModelFromJSON,
    UserSummaryResponseModelFromJSONTyped,
    UserSummaryResponseModelToJSON,
} from './UserSummaryResponseModel';

/**
 * 
 * @export
 * @interface AnswerSummaryResponseModel
 */
export interface AnswerSummaryResponseModel {
    /**
     * ID. The answer's unique identifier.
     * @type {number}
     * @memberof AnswerSummaryResponseModel
     */
    id?: number;
    /**
     * Question ID. The ID of the answered question.
     * @type {number}
     * @memberof AnswerSummaryResponseModel
     */
    questionId?: number;
    /**
     * Answer body. The written content of the answer.
     * @type {string}
     * @memberof AnswerSummaryResponseModel
     */
    body?: string;
    /**
     * Answer Score. Calculated by subtracting the number of downvotes from the number of upvotes
     * @type {number}
     * @memberof AnswerSummaryResponseModel
     */
    score?: number;
    /**
     * Accepted answer. Returns true if this is the accepted answer for the question.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    isAccepted?: boolean;
    /**
     * Answer deleted. Returns true if the answer was deleted.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    isDeleted?: boolean;
    /**
     * Answer bookmarked. Returns true if the logged-in user bookmarked the answer.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    isBookmarked?: boolean;
    /**
     * Answer followed. Returns true if the logged-in user followed the answer.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    isFollowed?: boolean;
    /**
     * Creation date. The date and time the answer was created.
     * @type {Date}
     * @memberof AnswerSummaryResponseModel
     */
    creationDate?: Date;
    /**
     * Locked date. The date and time the answer was locked.
     * @type {Date}
     * @memberof AnswerSummaryResponseModel
     */
    lockedDate?: Date | null;
    /**
     * Last edit date. The date and time the answer was last edited.
     * @type {Date}
     * @memberof AnswerSummaryResponseModel
     */
    lastEditDate?: Date | null;
    /**
     * Last activity date. The date and time the answer last had activity.
     * @type {Date}
     * @memberof AnswerSummaryResponseModel
     */
    lastActivityDate?: Date | null;
    /**
     * Deletion date. The date and time the answer was deleted.
     * @type {Date}
     * @memberof AnswerSummaryResponseModel
     */
    deletionDate?: Date | null;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof AnswerSummaryResponseModel
     */
    owner?: UserSummaryResponseModel;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof AnswerSummaryResponseModel
     */
    lastEditor?: UserSummaryResponseModel;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof AnswerSummaryResponseModel
     */
    lastActivityUser?: UserSummaryResponseModel;
    /**
     * Comment count. The number of comments on the answer.
     * @type {number}
     * @memberof AnswerSummaryResponseModel
     */
    commentCount?: number;
    /**
     * Share link. The direct link to the answer.
     * @type {string}
     * @memberof AnswerSummaryResponseModel
     */
    shareLink?: string | null;
    /**
     * User can follow answer. Returns true if the logged-in user can follow the answer.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    userCanFollow?: boolean;
    /**
     * Answer can be followed. Returns true if anyone can follow the answer.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    canBeFollowed?: boolean;
    /**
     * Answer is from a subject matter expert.
     * @type {boolean}
     * @memberof AnswerSummaryResponseModel
     */
    isSubjectMatterExpert?: boolean;
}

/**
 * Check if a given object implements the AnswerSummaryResponseModel interface.
 */
export function instanceOfAnswerSummaryResponseModel(value: object): value is AnswerSummaryResponseModel {
    return true;
}

export function AnswerSummaryResponseModelFromJSON(json: any): AnswerSummaryResponseModel {
    return AnswerSummaryResponseModelFromJSONTyped(json, false);
}

export function AnswerSummaryResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnswerSummaryResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'questionId': json['questionId'] == null ? undefined : json['questionId'],
        'body': json['body'] == null ? undefined : json['body'],
        'score': json['score'] == null ? undefined : json['score'],
        'isAccepted': json['isAccepted'] == null ? undefined : json['isAccepted'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'isBookmarked': json['isBookmarked'] == null ? undefined : json['isBookmarked'],
        'isFollowed': json['isFollowed'] == null ? undefined : json['isFollowed'],
        'creationDate': json['creationDate'] == null ? undefined : (new Date(json['creationDate'])),
        'lockedDate': json['lockedDate'] == null ? undefined : (new Date(json['lockedDate'])),
        'lastEditDate': json['lastEditDate'] == null ? undefined : (new Date(json['lastEditDate'])),
        'lastActivityDate': json['lastActivityDate'] == null ? undefined : (new Date(json['lastActivityDate'])),
        'deletionDate': json['deletionDate'] == null ? undefined : (new Date(json['deletionDate'])),
        'owner': json['owner'] == null ? undefined : UserSummaryResponseModelFromJSON(json['owner']),
        'lastEditor': json['lastEditor'] == null ? undefined : UserSummaryResponseModelFromJSON(json['lastEditor']),
        'lastActivityUser': json['lastActivityUser'] == null ? undefined : UserSummaryResponseModelFromJSON(json['lastActivityUser']),
        'commentCount': json['commentCount'] == null ? undefined : json['commentCount'],
        'shareLink': json['shareLink'] == null ? undefined : json['shareLink'],
        'userCanFollow': json['userCanFollow'] == null ? undefined : json['userCanFollow'],
        'canBeFollowed': json['canBeFollowed'] == null ? undefined : json['canBeFollowed'],
        'isSubjectMatterExpert': json['isSubjectMatterExpert'] == null ? undefined : json['isSubjectMatterExpert'],
    };
}

export function AnswerSummaryResponseModelToJSON(value?: AnswerSummaryResponseModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'questionId': value['questionId'],
        'body': value['body'],
        'score': value['score'],
        'isAccepted': value['isAccepted'],
        'isDeleted': value['isDeleted'],
        'isBookmarked': value['isBookmarked'],
        'isFollowed': value['isFollowed'],
        'creationDate': value['creationDate'] == null ? undefined : ((value['creationDate']).toISOString()),
        'lockedDate': value['lockedDate'] == null ? undefined : ((value['lockedDate'] as any).toISOString()),
        'lastEditDate': value['lastEditDate'] == null ? undefined : ((value['lastEditDate'] as any).toISOString()),
        'lastActivityDate': value['lastActivityDate'] == null ? undefined : ((value['lastActivityDate'] as any).toISOString()),
        'deletionDate': value['deletionDate'] == null ? undefined : ((value['deletionDate'] as any).toISOString()),
        'owner': UserSummaryResponseModelToJSON(value['owner']),
        'lastEditor': UserSummaryResponseModelToJSON(value['lastEditor']),
        'lastActivityUser': UserSummaryResponseModelToJSON(value['lastActivityUser']),
        'commentCount': value['commentCount'],
        'shareLink': value['shareLink'],
        'userCanFollow': value['userCanFollow'],
        'canBeFollowed': value['canBeFollowed'],
        'isSubjectMatterExpert': value['isSubjectMatterExpert'],
    };
}

