/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArticleSummaryResponseModel } from './ArticleSummaryResponseModel';
import {
    ArticleSummaryResponseModelFromJSON,
    ArticleSummaryResponseModelFromJSONTyped,
    ArticleSummaryResponseModelToJSON,
} from './ArticleSummaryResponseModel';
import type { SortOrder } from './SortOrder';
import {
    SortOrderFromJSON,
    SortOrderFromJSONTyped,
    SortOrderToJSON,
} from './SortOrder';
import type { ArticleSortParameter } from './ArticleSortParameter';
import {
    ArticleSortParameterFromJSON,
    ArticleSortParameterFromJSONTyped,
    ArticleSortParameterToJSON,
} from './ArticleSortParameter';

/**
 * 
 * @export
 * @interface PaginatedArticles
 */
export interface PaginatedArticles {
    /**
     * Total count. The total number of records found.
     * @type {number}
     * @memberof PaginatedArticles
     */
    readonly totalCount?: number;
    /**
     * Page size. The number of records to retrieve per page.
     * @type {number}
     * @memberof PaginatedArticles
     */
    readonly pageSize?: number;
    /**
     * Page. The number of the current page.
     * @type {number}
     * @memberof PaginatedArticles
     */
    readonly page?: number;
    /**
     * Total pages. The total number of pages available.
     * @type {number}
     * @memberof PaginatedArticles
     */
    readonly totalPages?: number;
    /**
     * 
     * @type {ArticleSortParameter}
     * @memberof PaginatedArticles
     */
    sort?: ArticleSortParameter;
    /**
     * 
     * @type {SortOrder}
     * @memberof PaginatedArticles
     */
    order?: SortOrder;
    /**
     * 
     * @type {Array<ArticleSummaryResponseModel>}
     * @memberof PaginatedArticles
     */
    readonly items?: Array<ArticleSummaryResponseModel>;
}



/**
 * Check if a given object implements the PaginatedArticles interface.
 */
export function instanceOfPaginatedArticles(value: object): value is PaginatedArticles {
    return true;
}

export function PaginatedArticlesFromJSON(json: any): PaginatedArticles {
    return PaginatedArticlesFromJSONTyped(json, false);
}

export function PaginatedArticlesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedArticles {
    if (json == null) {
        return json;
    }
    return {
        
        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'page': json['page'] == null ? undefined : json['page'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'sort': json['sort'] == null ? undefined : ArticleSortParameterFromJSON(json['sort']),
        'order': json['order'] == null ? undefined : SortOrderFromJSON(json['order']),
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ArticleSummaryResponseModelFromJSON)),
    };
}

export function PaginatedArticlesToJSON(value?: Omit<PaginatedArticles, 'totalCount'|'pageSize'|'page'|'totalPages'|'items'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sort': ArticleSortParameterToJSON(value['sort']),
        'order': SortOrderToJSON(value['order']),
    };
}

