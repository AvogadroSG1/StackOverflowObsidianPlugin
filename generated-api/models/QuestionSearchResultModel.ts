/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TagSummaryResponseModel } from './TagSummaryResponseModel';
import {
    TagSummaryResponseModelFromJSON,
    TagSummaryResponseModelFromJSONTyped,
    TagSummaryResponseModelToJSON,
} from './TagSummaryResponseModel';
import type { UserSummaryResponseModel } from './UserSummaryResponseModel';
import {
    UserSummaryResponseModelFromJSON,
    UserSummaryResponseModelFromJSONTyped,
    UserSummaryResponseModelToJSON,
} from './UserSummaryResponseModel';

/**
 * 
 * @export
 * @interface QuestionSearchResultModel
 */
export interface QuestionSearchResultModel {
    /**
     * 
     * @type {string}
     * @memberof QuestionSearchResultModel
     */
    readonly type?: string;
    /**
     * 
     * @type {number}
     * @memberof QuestionSearchResultModel
     */
    questionId?: number;
    /**
     * 
     * @type {number}
     * @memberof QuestionSearchResultModel
     */
    answerCount?: number;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionSearchResultModel
     */
    hasAcceptedAnswer?: boolean;
    /**
     * 
     * @type {number}
     * @memberof QuestionSearchResultModel
     */
    viewCount?: number;
    /**
     * 
     * @type {string}
     * @memberof QuestionSearchResultModel
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionSearchResultModel
     */
    snippet?: string;
    /**
     * 
     * @type {Array<TagSummaryResponseModel>}
     * @memberof QuestionSearchResultModel
     */
    tags?: Array<TagSummaryResponseModel>;
    /**
     * 
     * @type {UserSummaryResponseModel}
     * @memberof QuestionSearchResultModel
     */
    owner?: UserSummaryResponseModel;
    /**
     * 
     * @type {Date}
     * @memberof QuestionSearchResultModel
     */
    creationDate?: Date;
}

/**
 * Check if a given object implements the QuestionSearchResultModel interface.
 */
export function instanceOfQuestionSearchResultModel(value: object): value is QuestionSearchResultModel {
    return true;
}

export function QuestionSearchResultModelFromJSON(json: any): QuestionSearchResultModel {
    return QuestionSearchResultModelFromJSONTyped(json, false);
}

export function QuestionSearchResultModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionSearchResultModel {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'questionId': json['questionId'] == null ? undefined : json['questionId'],
        'answerCount': json['answerCount'] == null ? undefined : json['answerCount'],
        'hasAcceptedAnswer': json['hasAcceptedAnswer'] == null ? undefined : json['hasAcceptedAnswer'],
        'viewCount': json['viewCount'] == null ? undefined : json['viewCount'],
        'title': json['title'] == null ? undefined : json['title'],
        'snippet': json['snippet'] == null ? undefined : json['snippet'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagSummaryResponseModelFromJSON)),
        'owner': json['owner'] == null ? undefined : UserSummaryResponseModelFromJSON(json['owner']),
        'creationDate': json['creationDate'] == null ? undefined : (new Date(json['creationDate'])),
    };
}

export function QuestionSearchResultModelToJSON(value?: QuestionSearchResultModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'questionId': value['questionId'],
        'answerCount': value['answerCount'],
        'hasAcceptedAnswer': value['hasAcceptedAnswer'],
        'viewCount': value['viewCount'],
        'title': value['title'],
        'snippet': value['snippet'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagSummaryResponseModelToJSON)),
        'owner': UserSummaryResponseModelToJSON(value['owner']),
        'creationDate': value['creationDate'] == null ? undefined : ((value['creationDate']).toISOString()),
    };
}

