/* tslint:disable */
/* eslint-disable */
/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubjectMatterExpertResponseModel } from './SubjectMatterExpertResponseModel';
import {
    SubjectMatterExpertResponseModelFromJSON,
    SubjectMatterExpertResponseModelFromJSONTyped,
    SubjectMatterExpertResponseModelToJSON,
} from './SubjectMatterExpertResponseModel';

/**
 * 
 * @export
 * @interface TagResponseModel
 */
export interface TagResponseModel {
    /**
     * 
     * @type {SubjectMatterExpertResponseModel}
     * @memberof TagResponseModel
     */
    subjectMatterExperts?: SubjectMatterExpertResponseModel;
    /**
     * ID. The tag's unique identifier.
     * @type {number}
     * @memberof TagResponseModel
     */
    id?: number;
    /**
     * Name. The tag's name.
     * @type {string}
     * @memberof TagResponseModel
     */
    name?: string;
    /**
     * Description. The tag's description.
     * @type {string}
     * @memberof TagResponseModel
     */
    description?: string;
    /**
     * PostCount. The number of posts that have this tag.
     * @type {number}
     * @memberof TagResponseModel
     */
    postCount?: number;
    /**
     * Subject Matter Expert Count. The total number of individual users who are SMEs for this tag.  This includes individual SMEs assigned, plus the members of any SME groups.  If null, SMEs are not enabled
     * @type {number}
     * @memberof TagResponseModel
     */
    subjectMatterExpertCount?: number | null;
    /**
     * WatcherCount. The number of users watching this tag.
     * @type {number}
     * @memberof TagResponseModel
     */
    watcherCount?: number;
    /**
     * CreationDate. The date and time the tag was created.
     * @type {Date}
     * @memberof TagResponseModel
     */
    creationDate?: Date;
    /**
     * HasSynonyms. Returns true if the tag has synonym(s).
     * @type {boolean}
     * @memberof TagResponseModel
     */
    hasSynonyms?: boolean;
}

/**
 * Check if a given object implements the TagResponseModel interface.
 */
export function instanceOfTagResponseModel(value: object): value is TagResponseModel {
    return true;
}

export function TagResponseModelFromJSON(json: any): TagResponseModel {
    return TagResponseModelFromJSONTyped(json, false);
}

export function TagResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'subjectMatterExperts': json['subjectMatterExperts'] == null ? undefined : SubjectMatterExpertResponseModelFromJSON(json['subjectMatterExperts']),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'postCount': json['postCount'] == null ? undefined : json['postCount'],
        'subjectMatterExpertCount': json['subjectMatterExpertCount'] == null ? undefined : json['subjectMatterExpertCount'],
        'watcherCount': json['watcherCount'] == null ? undefined : json['watcherCount'],
        'creationDate': json['creationDate'] == null ? undefined : (new Date(json['creationDate'])),
        'hasSynonyms': json['hasSynonyms'] == null ? undefined : json['hasSynonyms'],
    };
}

export function TagResponseModelToJSON(value?: TagResponseModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subjectMatterExperts': SubjectMatterExpertResponseModelToJSON(value['subjectMatterExperts']),
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'postCount': value['postCount'],
        'subjectMatterExpertCount': value['subjectMatterExpertCount'],
        'watcherCount': value['watcherCount'],
        'creationDate': value['creationDate'] == null ? undefined : ((value['creationDate']).toISOString()),
        'hasSynonyms': value['hasSynonyms'],
    };
}

